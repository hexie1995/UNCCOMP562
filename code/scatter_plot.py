# -*- coding: utf-8 -*-
"""
Created on Mon Apr  6 22:21:55 2020

@author: hexie
"""

import matplotlib.pyplot as plt
dsa = [0.57241789843577617,0.72058478027770612,0.55901769399671664,0.61944790830310903,
       0.60189169097587181,0.58808382372656842,0.68708050101841489,0.60693902240214082]
dda =[0.92340113806886048,
 0.83007125804794968,
 0.67628924290778625,
 0.90152584254268786,
 0.87290589906914207,
 0.67804737406857007,
 0.8647730636727925,
 0.83369918909423624,
 0.83724276296278666,
 0.78473657314317646,
 0.88037673296042873,
 0.8394374194709322,
 0.83815261590082957,
 0.87479186474016257,
 0.82664841341345296,
 0.90768162214098136,
 0.66181376226669308,
 0.84308263772710368,
 0.81561505837482429,
 0.65651801199821291,
 0.86556464775015685,
 0.69004438164228454,
 0.70139063128868795,
 0.70732825853559389,
 0.68924298309683174,
 0.67740190277428525,
 0.86764394933340705,
 0.70561764952287565,
 0.82226395988265466,
 0.91899559971346478,
 0.82578635464223782,
 0.6957916770873307,
 0.83494823809178187,
 0.75647549611752818,
 0.87056587540675689,
 0.84972122034039155,
 0.93700477513685121,
 0.81760738899514995,
 0.69623593460072453,
 0.87913410795381197,
 0.74567829865909796,
 0.87370632145117066,
 0.72351604820087057,
 0.85295315423362228,
 0.74048701116391213,
 0.87314773705330317,
 0.78443980382296652,
 0.75369536139986715,
 0.7363805531134151,
 0.80946286248004873,
 0.92040581374197661,
 0.85485674443950699,
 0.70334888800316409,
 0.90001800777445362,
 0.82485614267413576,
 0.71657950171429241]
daa =[0.9381599011053614,
 0.9242811095062381,
 0.93982243996139214,
 0.91845559176756186,
 0.93749191944911858,
 0.93594644137244543,
 0.89555428056589115,
 0.94030385559337915]


pair =[['badnews', 'closefriend'],
 ['badnews', 'empathetic'],
 ['badnews', 'feelpositive'],
 ['badnews', 'goodnews'],
 ['badnews', 'socialadvice'],
 ['badnews', 'spendtime'],
 ['badnews', 'support'],
 ['closefriend', 'badnews'],
 ['closefriend', 'empathetic'],
 ['closefriend', 'feelpositive'],
 ['closefriend', 'goodnews'],
 ['closefriend', 'socialadvice'],
 ['closefriend', 'spendtime'],
 ['closefriend', 'support'],
 ['empathetic', 'badnews'],
 ['empathetic', 'closefriend'],
 ['empathetic', 'feelpositive'],
 ['empathetic', 'goodnews'],
 ['empathetic', 'socialadvice'],
 ['empathetic', 'spendtime'],
 ['empathetic', 'support'],
 ['feelpositive', 'badnews'],
 ['feelpositive', 'closefriend'],
 ['feelpositive', 'empathetic'],
 ['feelpositive', 'goodnews'],
 ['feelpositive', 'socialadvice'],
 ['feelpositive', 'spendtime'],
 ['feelpositive', 'support'],
 ['goodnews', 'badnews'],
 ['goodnews', 'closefriend'],
 ['goodnews', 'empathetic'],
 ['goodnews', 'feelpositive'],
 ['goodnews', 'socialadvice'],
 ['goodnews', 'spendtime'],
 ['goodnews', 'support'],
 ['socialadvice', 'badnews'],
 ['socialadvice', 'closefriend'],
 ['socialadvice', 'empathetic'],
 ['socialadvice', 'feelpositive'],
 ['socialadvice', 'goodnews'],
 ['socialadvice', 'spendtime'],
 ['socialadvice', 'support'],
 ['spendtime', 'badnews'],
 ['spendtime', 'closefriend'],
 ['spendtime', 'empathetic'],
 ['spendtime', 'feelpositive'],
 ['spendtime', 'goodnews'],
 ['spendtime', 'socialadvice'],
 ['spendtime', 'support'],
 ['support', 'badnews'],
 ['support', 'closefriend'],
 ['support', 'empathetic'],
 ['support', 'feelpositive'],
 ['support', 'goodnews'],
 ['support', 'socialadvice'],
 ['support', 'spendtime']]

layers= ['badnews','closefriend','empathetic', 'feelpositive','goodnews',
         'socialadvice', 'spendtime', 'support']

lll = ['B','C','E', 'F','G',
         'SO', 'SP', 'SU']
pair = [tuple(l) for l in pair]
#%%
pairdict = dict(zip(pair, dda))
maxx=[]
minx=[]

for x in layers:
    tmp=[]
    for y in pair:
        if y[0] == x:
            tmp.append(pairdict[y])
    maxx.append(max(tmp))
    minx.append(min(tmp))


fig=plt.figure()
ax=fig.add_axes([0,0,1,1])
rr= ax.scatter(lll, dsa, color='r')
gg = ax.scatter(lll, daa, color='g')
bb = ax.scatter(lll, maxx, color='b')
yy = ax.scatter(lll, minx, color='y')

plt.legend((rr, gg, bb, yy),
           ('single', 'all', 'similar', 'notsimilar'),
           scatterpoints=1,
           loc='lower right',
           ncol=3,
           fontsize=8)

ax.set_xlabel('layer')
ax.set_ylabel('AUC')
ax.set_title('Stanford AUC')
plt.show()
#%% 

layers2 = ['borrowmoney',
 'giveadvice',
 'helpdecision',
 'keroricecome',
 'keroricego',
 'lendmoney',
 'locleader',
 'medic',
 'nonrel',
 'templecompany',
 'visitcome',
 'visitgo']

vsa= [0.50283941608535365,
 0.49889040184835209,
 0.5024890296248079,
 0.50659963274672726,
 0.50027402030270518,
 0.50808466855115098,
 0.49645851345676589,
 0.48961453716924358,
 0.50116883009339541,
 0.49474831498624933,
 0.49982321891529752,
 0.49567126793663724]

pair2 = [('borrowmoney', 'giveadvice'),
 ('borrowmoney', 'helpdecision'),
 ('borrowmoney', 'keroricecome'),
 ('borrowmoney', 'keroricego'),
 ('borrowmoney', 'lendmoney'),
 ('borrowmoney', 'locleader'),
 ('borrowmoney', 'medic'),
 ('borrowmoney', 'nonrel'),
 ('borrowmoney', 'templecompany'),
 ('borrowmoney', 'visitcome'),
 ('borrowmoney', 'visitgo'),
 ('giveadvice', 'borrowmoney'),
 ('giveadvice', 'helpdecision'),
 ('giveadvice', 'keroricecome'),
 ('giveadvice', 'keroricego'),
 ('giveadvice', 'lendmoney'),
 ('giveadvice', 'locleader'),
 ('giveadvice', 'medic'),
 ('giveadvice', 'nonrel'),
 ('giveadvice', 'templecompany'),
 ('giveadvice', 'visitcome'),
 ('giveadvice', 'visitgo'),
 ('helpdecision', 'borrowmoney'),
 ('helpdecision', 'giveadvice'),
 ('helpdecision', 'keroricecome'),
 ('helpdecision', 'keroricego'),
 ('helpdecision', 'lendmoney'),
 ('helpdecision', 'locleader'),
 ('helpdecision', 'medic'),
 ('helpdecision', 'nonrel'),
 ('helpdecision', 'templecompany'),
 ('helpdecision', 'visitcome'),
 ('helpdecision', 'visitgo'),
 ('keroricecome', 'borrowmoney'),
 ('keroricecome', 'giveadvice'),
 ('keroricecome', 'helpdecision'),
 ('keroricecome', 'keroricego'),
 ('keroricecome', 'lendmoney'),
 ('keroricecome', 'locleader'),
 ('keroricecome', 'medic'),
 ('keroricecome', 'nonrel'),
 ('keroricecome', 'templecompany'),
 ('keroricecome', 'visitcome'),
 ('keroricecome', 'visitgo'),
 ('keroricego', 'borrowmoney'),
 ('keroricego', 'giveadvice'),
 ('keroricego', 'helpdecision'),
 ('keroricego', 'keroricecome'),
 ('keroricego', 'lendmoney'),
 ('keroricego', 'locleader'),
 ('keroricego', 'medic'),
 ('keroricego', 'nonrel'),
 ('keroricego', 'templecompany'),
 ('keroricego', 'visitcome'),
 ('keroricego', 'visitgo'),
 ('lendmoney', 'borrowmoney'),
 ('lendmoney', 'giveadvice'),
 ('lendmoney', 'helpdecision'),
 ('lendmoney', 'keroricecome'),
 ('lendmoney', 'keroricego'),
 ('lendmoney', 'locleader'),
 ('lendmoney', 'medic'),
 ('lendmoney', 'nonrel'),
 ('lendmoney', 'templecompany'),
 ('lendmoney', 'visitcome'),
 ('lendmoney', 'visitgo'),
 ('locleader', 'borrowmoney'),
 ('locleader', 'giveadvice'),
 ('locleader', 'helpdecision'),
 ('locleader', 'keroricecome'),
 ('locleader', 'keroricego'),
 ('locleader', 'lendmoney'),
 ('locleader', 'medic'),
 ('locleader', 'nonrel'),
 ('locleader', 'templecompany'),
 ('locleader', 'visitcome'),
 ('locleader', 'visitgo'),
 ('medic', 'borrowmoney'),
 ('medic', 'giveadvice'),
 ('medic', 'helpdecision'),
 ('medic', 'keroricecome'),
 ('medic', 'keroricego'),
 ('medic', 'lendmoney'),
 ('medic', 'locleader'),
 ('medic', 'nonrel'),
 ('medic', 'templecompany'),
 ('medic', 'visitcome'),
 ('medic', 'visitgo'),
 ('nonrel', 'borrowmoney'),
 ('nonrel', 'giveadvice'),
 ('nonrel', 'helpdecision'),
 ('nonrel', 'keroricecome'),
 ('nonrel', 'keroricego'),
 ('nonrel', 'lendmoney'),
 ('nonrel', 'locleader'),
 ('nonrel', 'medic'),
 ('nonrel', 'templecompany'),
 ('nonrel', 'visitcome'),
 ('nonrel', 'visitgo'),
 ('templecompany', 'borrowmoney'),
 ('templecompany', 'giveadvice'),
 ('templecompany', 'helpdecision'),
 ('templecompany', 'keroricecome'),
 ('templecompany', 'keroricego'),
 ('templecompany', 'lendmoney'),
 ('templecompany', 'locleader'),
 ('templecompany', 'medic'),
 ('templecompany', 'nonrel'),
 ('templecompany', 'visitcome'),
 ('templecompany', 'visitgo'),
 ('visitcome', 'borrowmoney'),
 ('visitcome', 'giveadvice'),
 ('visitcome', 'helpdecision'),
 ('visitcome', 'keroricecome'),
 ('visitcome', 'keroricego'),
 ('visitcome', 'lendmoney'),
 ('visitcome', 'locleader'),
 ('visitcome', 'medic'),
 ('visitcome', 'nonrel'),
 ('visitcome', 'templecompany'),
 ('visitcome', 'visitgo'),
 ('visitgo', 'borrowmoney'),
 ('visitgo', 'giveadvice'),
 ('visitgo', 'helpdecision'),
 ('visitgo', 'keroricecome'),
 ('visitgo', 'keroricego'),
 ('visitgo', 'lendmoney'),
 ('visitgo', 'locleader'),
 ('visitgo', 'medic'),
 ('visitgo', 'nonrel'),
 ('visitgo', 'templecompany'),
 ('visitgo', 'visitcome')]
vda= [0.50628172613614486,
 0.49170969770507239,
 0.4919888569483038,
 0.49520792527117474,
 0.51374479684331986,
 0.48620006770852037,
 0.49200996524470247,
 0.50604280665811807,
 0.48404690517747356,
 0.51105016157261007,
 0.50484869678538535,
 0.48370724951922789,
 0.5113612981786505,
 0.4848231706874257,
 0.49492299868941941,
 0.5276385119224144,
 0.51118935087346717,
 0.50916132767323985,
 0.53159097351193785,
 0.51534336678979964,
 0.49565654355578581,
 0.51784903194438459,
 0.50370546263266736,
 0.49871771428065842,
 0.49625933708093678,
 0.4947512453152732,
 0.49977952508961021,
 0.48795097842067664,
 0.49820760775438599,
 0.50424233937616203,
 0.5165467674792481,
 0.4894968788582395,
 0.51333436764443119,
 0.47938628660764065,
 0.49736803248955558,
 0.5221486144921188,
 0.5125524864293185,
 0.49144323807336021,
 0.49464366879529492,
 0.49600314097424847,
 0.50422532065292436,
 0.48505553726060069,
 0.50323234277269158,
 0.49930516459467961,
 0.49960858944632419,
 0.48801667353434969,
 0.50364668583848915,
 0.50095576052407831,
 0.51170042832984641,
 0.49442034403131108,
 0.49686891377656428,
 0.49796570914633603,
 0.50130857370195836,
 0.50367632090721226,
 0.50339685943063406,
 0.49256973179312463,
 0.48838355216405827,
 0.50234528135093492,
 0.50695983685797807,
 0.51119377856704351,
 0.49845953634423873,
 0.49864153453039778,
 0.51761828301146617,
 0.49853964449170518,
 0.49637803235594674,
 0.49416731348670667,
 0.51561783985468712,
 0.49117918868912153,
 0.49146450001523895,
 0.48767935462408846,
 0.49702413590658234,
 0.48608867586589127,
 0.51331065144619725,
 0.49227548595638271,
 0.51729425777756133,
 0.5061178703666912,
 0.50294019394725764,
 0.50168332068816224,
 0.51443252382653759,
 0.52606339285064796,
 0.5019909309897731,
 0.48170453458355095,
 0.50606292479530524,
 0.49506996385934737,
 0.50105001604451704,
 0.51809415806405512,
 0.50580830826239598,
 0.50990721339765865,
 0.5049526849656617,
 0.51117338565576942,
 0.50563779065670966,
 0.48751627500018113,
 0.48843415673585794,
 0.51092141297642357,
 0.49903485625994631,
 0.48123897747449612,
 0.49730484083540971,
 0.49754872167402819,
 0.48137310592817523,
 0.4838991097496334,
 0.4947825129320913,
 0.5297997548956902,
 0.47597576933350444,
 0.49217220833812747,
 0.47007415731342994,
 0.47978149147477883,
 0.52984382269597763,
 0.47355520885790198,
 0.47632740293200526,
 0.47191874708813897,
 0.51910304296297061,
 0.50673133448665342,
 0.51954136044333676,
 0.49703715348847705,
 0.50083006252557449,
 0.51938666680657264,
 0.50918406733917909,
 0.51045320804811323,
 0.50262178082464548,
 0.50351474375814653,
 0.50568936362303762,
 0.51035120706856596,
 0.50486338350453785,
 0.48892509338018786,
 0.49915826066359492,
 0.49560296444990781,
 0.49795278256504077,
 0.49222032292782369,
 0.49489201463251131,
 0.49375703469113158,
 0.51236855750550026,
 0.50645439224270028]


vaa= [0.62346962608154022,
 0.68489588461506423,
 0.63485129730858103,
 0.59708391313779641,
 0.59552813010196748,
 0.5946501211388876,
 0.58675774189805729,
 0.61009046858723925,
 0.59816728468434621,
 0.70392212634454376,
 0.62550281644342554,
 0.61411546751995982]

ll = ['BO',
 'GI',
 'HE',
 'KI',
 'KG',
 'LE',
 'LO',
 'ME',
 'NO',
 'TE',
 'VC',
 'VG']

#%%
pairdict2 = dict(zip(pair2, vda))
maxy=[]
miny=[]

for x in layers2:
    tmp=[]
    for y in pair2:
        if y[0] == x:
            tmp.append(pairdict2[y])
    maxy.append(max(tmp))
    miny.append(min(tmp))


fig=plt.figure()

ax=fig.add_axes([0,0,1,1])
rr= ax.scatter(ll, vsa, color='r')
gg = ax.scatter(ll, vaa, color='g')
bb = ax.scatter(ll, maxy, color='b')
yy = ax.scatter(ll, miny, color='y')

plt.legend((rr, gg, bb, yy),
           ('single', 'all', 'similar', 'notsimilar'),
           scatterpoints=1,
           loc='lower right',
           ncol=3,
           fontsize=8)

ax.set_xlabel('layer')
ax.set_ylabel('AUC')
ax.set_title('villiage AUC')
plt.show()

#%%
layers3 = ['alcLeast', 'alcMost', 'closest', 'comeForBad',
              'goToBad', 'goToGood', 'influence', 'interact', 'leaders',
              'like']

msa= [0.66800000000000004,
 0.59093637454981995,
 0.66090331686661963,
 0.51796973518284983,
 0.58272058823529416,
 0.50869565217391299,
 0.53872633390705671,
 0.63602681721947785,
 0.58149350649350651,
 0.69078947368421062]

mda = [0.63601606129296506,
 0.63068991308935651,
 0.63754935500828447,
 0.65191614955095423,
 0.62818096803439782,
 0.63330715383393166,
 0.68013534964803146,
 0.58555578141531628,
 0.61278741238975176,
 0.62072632660709359,
 0.63354311430934873,
 0.61491023098297259,
 0.60605941832952226,
 0.68332824311321783,
 0.65869725657595979,
 0.65993795781338171,
 0.66486562900214208,
 0.6812851987084807,
 0.63691520828527304,
 0.60526555047194186,
 0.71589497739269026,
 0.65938282386486302,
 0.6934107108840929,
 0.6010199793788914,
 0.7353665896317555,
 0.62006582544067523,
 0.74351125858404288,
 0.4655863906867399,
 0.65149687783128729,
 0.70690079880190559,
 0.67676316526876024,
 0.66160096002870106,
 0.51956983714263349,
 0.63339002913657938,
 0.57993080047270895,
 0.65974453217607765,
 0.56305295783971576,
 0.6486566212196051,
 0.70151679701108138,
 0.66434933615083802,
 0.66303788355077675,
 0.61900362843891354,
 0.64065527723379334,
 0.62344016621162779,
 0.72384835278791326,
 0.5775437743309888,
 0.55356926622633262,
 0.69820135777845316,
 0.64696237792584987,
 0.6748171890771566,
 0.54017711718710792,
 0.68212054359764318,
 0.55934852021235948,
 0.68262047407563742,
 0.69758561042064082,
 0.68492228241766206,
 0.65586069523714496,
 0.62202597260580161,
 0.67433226423458137,
 0.67127359539147646,
 0.70861452452086893,
 0.68459675291606115,
 0.68205668316747936,
 0.56757641743208798,
 0.61633657203115577,
 0.62299550119772362,
 0.64305050912600958,
 0.64183594096985019,
 0.60401158294047097,
 0.60659709855040167,
 0.57585063203963294,
 0.68037154545497769,
 0.67481868558539093,
 0.71106707937286806,
 0.72074352275388209,
 0.67785033448850784,
 0.63518458929902188,
 0.69092397513418302,
 0.70679836517980554,
 0.69244074300131808,
 0.74139257118660329,
 0.67940135620920261,
 0.68487149341628817,
 0.73625294170651745,
 0.64821532727302322,
 0.68043145199098054,
 0.64650477075354373,
 0.66113701013950732,
 0.70323709385784039,
 0.6812303205391782]

pair3= [('alcLeast', 'alcMost'),
 ('alcLeast', 'closest'),
 ('alcLeast', 'comeForBad'),
 ('alcLeast', 'goToBad'),
 ('alcLeast', 'goToGood'),
 ('alcLeast', 'influence'),
 ('alcLeast', 'interact'),
 ('alcLeast', 'leaders'),
 ('alcLeast', 'like'),
 ('alcMost', 'alcLeast'),
 ('alcMost', 'closest'),
 ('alcMost', 'comeForBad'),
 ('alcMost', 'goToBad'),
 ('alcMost', 'goToGood'),
 ('alcMost', 'influence'),
 ('alcMost', 'interact'),
 ('alcMost', 'leaders'),
 ('alcMost', 'like'),
 ('closest', 'alcLeast'),
 ('closest', 'alcMost'),
 ('closest', 'comeForBad'),
 ('closest', 'goToBad'),
 ('closest', 'goToGood'),
 ('closest', 'influence'),
 ('closest', 'interact'),
 ('closest', 'leaders'),
 ('closest', 'like'),
 ('comeForBad', 'alcLeast'),
 ('comeForBad', 'alcMost'),
 ('comeForBad', 'closest'),
 ('comeForBad', 'goToBad'),
 ('comeForBad', 'goToGood'),
 ('comeForBad', 'influence'),
 ('comeForBad', 'interact'),
 ('comeForBad', 'leaders'),
 ('comeForBad', 'like'),
 ('goToBad', 'alcLeast'),
 ('goToBad', 'alcMost'),
 ('goToBad', 'closest'),
 ('goToBad', 'comeForBad'),
 ('goToBad', 'goToGood'),
 ('goToBad', 'influence'),
 ('goToBad', 'interact'),
 ('goToBad', 'leaders'),
 ('goToBad', 'like'),
 ('goToGood', 'alcLeast'),
 ('goToGood', 'alcMost'),
 ('goToGood', 'closest'),
 ('goToGood', 'comeForBad'),
 ('goToGood', 'goToBad'),
 ('goToGood', 'influence'),
 ('goToGood', 'interact'),
 ('goToGood', 'leaders'),
 ('goToGood', 'like'),
 ('influence', 'alcLeast'),
 ('influence', 'alcMost'),
 ('influence', 'closest'),
 ('influence', 'comeForBad'),
 ('influence', 'goToBad'),
 ('influence', 'goToGood'),
 ('influence', 'interact'),
 ('influence', 'leaders'),
 ('influence', 'like'),
 ('interact', 'alcLeast'),
 ('interact', 'alcMost'),
 ('interact', 'closest'),
 ('interact', 'comeForBad'),
 ('interact', 'goToBad'),
 ('interact', 'goToGood'),
 ('interact', 'influence'),
 ('interact', 'leaders'),
 ('interact', 'like'),
 ('leaders', 'alcLeast'),
 ('leaders', 'alcMost'),
 ('leaders', 'closest'),
 ('leaders', 'comeForBad'),
 ('leaders', 'goToBad'),
 ('leaders', 'goToGood'),
 ('leaders', 'influence'),
 ('leaders', 'interact'),
 ('leaders', 'like'),
 ('like', 'alcLeast'),
 ('like', 'alcMost'),
 ('like', 'closest'),
 ('like', 'comeForBad'),
 ('like', 'goToBad'),
 ('like', 'goToGood'),
 ('like', 'influence'),
 ('like', 'interact'),
 ('like', 'leaders')]

maa =[0.81360242000712968,
 0.89548475014850981,
 0.92338582420042736,
 0.82385577336226556,
 0.81738317920108161,
 0.84792703431904815,
 0.81285392016563984,
 0.83061576793086522,
 0.84911081041366288,
 0.89965450767284616]

l = ['aL', 'aM', 'cl', 'co',
              'gb', 'gg', 'if', 'it', 'le',
              'li']

#%%
pairdict3 = dict(zip(pair3, mda))
maxz=[]
minz=[]

for x in layers3:
    tmp=[]
    for y in pair3:
        if y[0] == x:
            tmp.append(pairdict3[y])
    maxz.append(max(tmp))
    minz.append(min(tmp))


fig=plt.figure()

ax=fig.add_axes([0,0,1,1])
rr= ax.scatter(l, msa, color='r')
gg = ax.scatter(l, maa, color='g')
bb = ax.scatter(l, maxz, color='b')
yy = ax.scatter(l, minz, color='y')

plt.legend((rr, gg, bb, yy),
           ('single', 'all', 'similar', 'notsimilar'),
           scatterpoints=1,
           loc='lower right',
           ncol=3,
           fontsize=8)

ax.set_xlabel('layer')
ax.set_ylabel('AUC')
ax.set_title('MURI AUC')
plt.show()
